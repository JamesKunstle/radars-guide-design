{"ast":null,"code":"var _jsxFileName = \"/Users/dawnxi/Documents/radars_design_tool/frontend/src/GuideDesignForm.js\";\nimport * as React from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport GuideTable from \"./GuideTable\";\nimport { Box } from \"@mui/material\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class GuideDesignForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      rows: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"A name was submitted: \" + this.state.value); // POST request using axios with error handling\n\n    const guideSequence = {\n      sequence: this.state.value\n    };\n    axios.post(\"http://www.radars.bio/tools/generate\", guideSequence, {\n      headers: {\n        // Overwrite Axios's automatically set Content-Type\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log(\"This is response\", response.data);\n      this.setState({\n        rows: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.message\n      });\n      console.error(\"There was an error!\", error);\n    });\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          fullWidth: true,\n          maxRows: 6,\n          label: \"Enter Transcript Sequence\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          color: \"secondary\",\n          sx: {\n            mb: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          fullWidth: true,\n          sx: {\n            p: \"5\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: this.handleSubmit,\n            size: \"large\",\n            sx: {\n              m: 1\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: this.state.rows === \"\" ? null : /*#__PURE__*/_jsxDEV(GuideTable, {\n          rows: this.state.rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/dawnxi/Documents/radars_design_tool/frontend/src/GuideDesignForm.js"],"names":["React","axios","TextField","Button","GuideTable","Box","GuideDesignForm","Component","constructor","props","state","value","rows","handleChange","bind","handleSubmit","event","setState","target","console","log","guideSequence","sequence","post","headers","then","response","data","catch","error","errorMessage","message","preventDefault","render","display","flexDirection","alignItems","mb","p","m","mt"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAO,WAAP;;;AACA,OAAO,MAAMC,eAAN,SAA8BN,KAAK,CAACO,SAApC,CAA8C;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP;AAAtB,KAAd;AACD;;AAEDI,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBG,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B,KAAKV,KAAL,CAAWC,KAAlD,EADkB,CAElB;;AACA,UAAMU,aAAa,GAAG;AAAEC,MAAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWC;AAAvB,KAAtB;AACAV,IAAAA,KAAK,CACFsB,IADH,CACQ,sCADR,EACgDF,aADhD,EAC+D;AAC3DG,MAAAA,OAAO,EAAE;AACP;AACA,wBAAgB;AAFT;AADkD,KAD/D,EAOGC,IAPH,CAOSC,QAAD,IAAc;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,QAAQ,CAACC,IAAzC;AAEA,WAAKV,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEc,QAAQ,CAACC;AAAjB,OAAd;AACD,KAXH,EAYGC,KAZH,CAYUC,KAAD,IAAW;AAChB,WAAKZ,QAAL,CAAc;AAAEa,QAAAA,YAAY,EAAED,KAAK,CAACE;AAAtB,OAAd;AACAZ,MAAAA,OAAO,CAACU,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD,KAfH;AAgBAb,IAAAA,KAAK,CAACgB,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAAE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AACTC,UAAAA,OAAO,EAAE,MADA;AAETC,UAAAA,aAAa,EAAE,QAFN;AAGTC,UAAAA,UAAU,EAAE;AAHH,SAAT;AAAA,gCAKA,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,SAAS,MAFX;AAGE,UAAA,OAAO,EAAE,CAHX;AAIE,UAAA,KAAK,EAAC,2BAJR;AAKE,UAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,KALpB;AAME,UAAA,QAAQ,EAAE,KAAKE,YANjB;AAOE,UAAA,KAAK,EAAC,WAPR;AAQE,UAAA,EAAE,EAAE;AAAEwB,YAAAA,EAAE,EAAE;AAAN;AARN;AAAA;AAAA;AAAA;AAAA,gBALA,eAcA,QAAC,GAAD;AAAK,UAAA,SAAS,MAAd;AAAe,UAAA,EAAE,EAAE;AACjBC,YAAAA,CAAC,EAAE;AADc,WAAnB;AAAA,iCAGE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,UAAhB;AAA2B,YAAA,OAAO,EAAE,KAAKvB,YAAzC;AAAuD,YAAA,IAAI,EAAC,OAA5D;AAAoE,YAAA,EAAE,EAAE;AAAEwB,cAAAA,CAAC,EAAE;AAAL,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,gBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAF,eAoBA,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAT;AAAA,kBAEK,KAAK9B,KAAL,CAAWE,IAAX,KAAoB,EAApB,GAAyB,IAAzB,gBACC,QAAC,UAAD;AAAY,UAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAA7B;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,cApBA;AAAA,oBADF;AA4BD;;AAjEkD","sourcesContent":["import * as React from \"react\";\nimport axios from \"axios\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport GuideTable from \"./GuideTable\";\nimport { Box } from \"@mui/material\";\nimport \"./App.css\";\nexport class GuideDesignForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: \"\", rows: \"\" };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    console.log(\"A name was submitted: \" + this.state.value);\n    // POST request using axios with error handling\n    const guideSequence = { sequence: this.state.value };\n    axios\n      .post(\"http://www.radars.bio/tools/generate\", guideSequence, {\n        headers: {\n          // Overwrite Axios's automatically set Content-Type\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((response) => {\n        console.log(\"This is response\", response.data);\n\n        this.setState({ rows: response.data });\n      })\n      .catch((error) => {\n        this.setState({ errorMessage: error.message });\n        console.error(\"There was an error!\", error);\n      });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <><Box sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      }}>\n        <TextField\n          multiline\n          fullWidth\n          maxRows={6}\n          label=\"Enter Transcript Sequence\"\n          value={this.state.value}\n          onChange={this.handleChange}\n          color=\"secondary\"\n          sx={{ mb: 1 }} />\n        <Box fullWidth sx={{\n          p: \"5\"\n        }}>\n          <Button variant=\"outlined\" onClick={this.handleSubmit} size=\"large\" sx={{ m: 1 }}>Submit</Button>\n        </Box>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n          \n          {this.state.rows === \"\" ? null : (\n            <GuideTable rows={this.state.rows} />\n          )}\n        </Box></>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}